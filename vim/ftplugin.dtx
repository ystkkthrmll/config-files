%
% ^^A Configuring DocStrip [[[
% \iffalse
%<*driver>
\input mydocstrip
\mygenerate[output-files/ftplugin]{
  css.vim,
  dot.vim,
  html.vim,
  java.vim,
  json.vim,
  markdown.vim,
  pu.vim,
  python.vim,
  tex.vim,
  yaml.vim,
}
\myendbatchfile
\mydriver[
  show-notes,
]
%</driver>
% \fi
% ^^A ]]] End of Configuring DocStrip
%
% \mytitle{Filetype Plugins}
%
% \begin{abstract}^^A [[[
% ファイルタイプごとの設定．
% \end{abstract}^^A ]]]
%
% \mytableofcontents
%
% \part{Notes}^^A [[[
%
% \section{Introduction}^^A [[[
% ftpluginとは．．．\urlref{https://vim.fandom.com/wiki/Keep_your_vimrc_file_clean}{***}
%
% \verb|ftplugin|の由来は\vimhelp{ftplugin-name}の\verb|ftplugin|フォルダ名より．
%
% ^^A ]]] End of section `Introduction'.
%
% \section{Indentation}^^A [[[
%
% \subsection{Spaces or Tabs}^^A [[[
% \begin{myitemize}
% \1 Spaces
%   \2 \viminline{set expandtab}
%     \3 タブをスペースで展開する
% \1 Tabs
%   \2 \viminline{set noexpandtab}
%     \3 タブをスペースで展開しない
% \end{myitemize}
%
% \subsection{Number of Spaces}^^A [[[
% \begin{myitemize}
% \1 \viminline{shiftwidth}
%   \2 Number of spaces to use for each step of (auto)indent \vimhelp{'shiftwidth'}.
% \1 \viminline{tabstop}
%   \2 Number of spaces that a <Tab> in the file counts for \vimhelp{tabstop}.
% \end{myitemize}
% ^^A ]]] End of subsection `Number of Spaces'.
%
% ^^A ]]] End of subsection `Spaces or Tabs'.
%
% ^^A ]]] End of section `Indentation'.
%
% \section{Maximun Line Length}^^A [[[
%
% \begin{concealableitemize}^^A [[[
% \1 The origin of `maximum line length'
%   \2 \href{https://legacy.python.org/dev/peps/pep-0008/#maximum-line-length}{ここ}より
% \end{concealableitemize}^^A ]]]
%
% \url{https://bbs.archlinux.org/viewtopic.php?id=35966}{test}
%
% \begin{myitemize}
% \1 Python: 80
%   \2 80はPEP 8より．
% \1 \LaTeX: 80
%   \2 Line length in the source files should be under 80 characters where possible,
%   as this helps keep everything on the screen when editing files
%   \texdoc[section=2 Documentation style]{l3styleguide}.
% \1
% \end{myitemize}
% ^^A ]]] End of section `Maximun Line Length'.
%
% \section{Folding}^^A [[[
% \begin{myitemize}
% \1 indentation深くなる1行前もfoldに含める方法
%   \2 \href{https://stackoverflow.com/questions/60231789/vim-add-one-line-above-the-fold-to-the-folding}{Vim - add one line above the fold to the folding}
% \1 \viminline{foldmarker}
%   \2 The start and end marker used when 'foldmethod' is "marker" \vimhelp{foldmarker}.
% \1 \viminline{foldmethod}
%   \2 The kind of folding used for the current window \vimhelp{foldmethod}.
% \end{myitemize}
% ^^A ]]] End of section `Folding'.
%
% ^^A ]]] End of part `Notes'.
%
% \part{\texttt{css.vim}}^^A [[[
% \iffalse
%<*css.vim>
% \fi
%
% \section{Indentation}^^A [[[
% \begin{myitemize}
% \1 The origin of 2 spaces
%   \2 Indent by 2 spaces at a time.
%   Don't use tabs or mix tabs and spaces for indentation.
%   \urlref{https://google.github.io/styleguide/htmlcssguide.html#Indentation}{2.2.1 Indentation}
% \end{myitemize}
%
% \begin{vimcode}
set expandtab
set shiftwidth=2
set tabstop=2
% \end{vimcode}
% ^^A ]]] End of section `Indentation'.
%
% \iffalse
%</css.vim>
% \fi
% ^^A ]]] End of part `css.vim'.
%
% \part{\texttt{dot.vim}}^^A [[[
% \iffalse
%<*dot.vim>
% \fi
%
% \section{Indentation}^^A [[[
% \begin{myitemize}
% \1 The origin of 2
%   \2 \href{https://graphviz.org/doc/info/lang.html}{DOT Language}
% \end{myitemize}
%
% \begin{vimcode}
set expandtab
set shiftwidth=2
set tabstop=2
% \end{vimcode}
% ^^A ]]] End of section `Indentation'.
%
% \section{Folding}^^A [[[
% \begin{vimcode}
" set foldmethod=syntax
set foldmethod=indent
% \end{vimcode}
% ^^A ]]] End of section `Folding'.
%
% \section{quickrun}^^A [[[
% \begin{myitemize}
% \1 References
%   \2 \href{https://ry0u.github.io/blog/2015/10/25/graphviztokavimtoka/}{GraphvizとかVimとか}
% \end{myitemize}
%
% \begin{vimcode}
let g:quickrun_config = {}
let g:quickrun_config.dot = {
  \ 'runner': 'vimproc',
  \ 'command': 'dot',
  \ 'outputter': 'error',
  \ 'outputter/error/error': 'quickfix',
%  \ 'exec': ['%c -T pdf %s -o %s:r.pdf', 'evince %s:r.pdf']
  \ 'exec': '%c -T pdf %s -o %s:r.pdf; evince %s:r.pdf &'
\ }
% \end{vimcode}
% ^^A ]]] End of section `quickrun'.
%
% \iffalse
%</dot.vim>
% \fi
% ^^A ]]] End of part `dot.vim'.
%
% \part{\texttt{html.vim}}^^A [[[
% \iffalse
%<*html.vim>
% \fi
%
% \section{Indentation}^^A [[[
% \begin{myitemize}
% \1 The origin of 2 spaces
%   \2 Indent by 2 spaces at a time.
%   Don't use tabs or mix tabs and spaces for indentation.
%   \urlref{https://google.github.io/styleguide/htmlcssguide.html#Indentation}{2.2.1 Indentation}
% \end{myitemize}
%
% \begin{vimcode}
set expandtab
set shiftwidth=2
set tabstop=2
% \end{vimcode}
% ^^A ]]] End of section `Indentation'.
%
% \iffalse
%</html.vim>
% \fi
% ^^A ]]] End of part `html.vim'.
%
% \part{\texttt{java.vim}}^^A [[[
% \iffalse
%<*java.vim>
% \fi
%
% \section{Indentation}^^A [[[
% \begin{myitemize}
% \1 The origin of `4 spaces'
%   \2 Four spaces should be used as the unit of indentation.
%     \3 \href{https://www.oracle.com/java/technologies/javase/codeconventions-indentation.html}{Code Conventions for the Java Programming Language: 4. Indentation}
% \end{myitemize}
%
% \begin{vimcode}
set expandtab
set shiftwidth=4
set tabstop=4
% \end{vimcode}
% ^^A ]]] End of section `Indentation'.
%
% \section{Folding}^^A [[[
% \begin{vimcode}

% \end{vimcode}
% ^^A ]]] End of section `Folding'.
%
% \iffalse
%</java.vim>
% \fi
% ^^A ]]] End of part `java.vim'.
%
% \part{\texttt{json.vim}}^^A [[[
% \iffalse
%<*json.vim>
% \fi
%
% \section{Indentation}^^A [[[
% \begin{vimcode}
set expandtab
set shiftwidth=2
set tabstop=2
% \end{vimcode}
% ^^A ]]] End of section `Indentation'.
%
% \section{Folding}^^A [[[
% \begin{vimcode}
function! FoldMethod(lnum)
    let l:indent = max([indent(a:lnum+1), indent(a:lnum)])
    return l:indent / &shiftwidth
endfunction

set foldmethod=expr
set foldexpr=FoldMethod(v:lnum)
% \end{vimcode}
% ^^A ]]] End of section `Folding'.
%
% \iffalse
%</json.vim>
% \fi
% ^^A ]]] End of part `json.vim'.
%
% \part{\texttt{markdown.vim}}^^A [[[
% \iffalse
%<*markdown.vim>
% \fi
%
%
% \section{quickrun}^^A [[[
% \begin{vimcode}
let g:quickrun_config = {}
let g:quickrun_config.markdown = {
  \ 'runner': 'vimproc',
  \ 'command': 'pandoc',
  \ 'outputter': 'error',
  \ 'outputter/error/error': 'quickfix',
%  \ 'exec': ['%c -T pdf %s -o %s:r.pdf', 'evince %s:r.pdf']
  \ 'exec': '%c %s -o %s:r.pdf -d /home/yasutaka/Dropbox/configuration-files/miscellaneous/output-files/miscellaneous/markdown.yaml; evince %s:r.pdf &'
\ }
% \end{vimcode}
% ^^A ]]] End of section `quickrun'.
%
% \iffalse
%</markdown.vim>
% \fi
% ^^A ]]] End of part `markdown.vim'.
%
% \part{\texttt{pu.vim}}^^A [[[
% \iffalse
%<*pu.vim>
% \fi
%
% \section{Indentation}^^A [[[
% \begin{vimcode}
set expandtab
set shiftwidth=2
set tabstop=2
% \end{vimcode}
% ^^A ]]] End of section `Indentation'.
%
% \iffalse
%</pu.vim>
% \fi
% ^^A ]]] End of part `pu.vim'.
%
% \part{\texttt{python.vim}}^^A [[[
% \iffalse
%<*python.vim>
% \fi
%
% \section{Indentation}^^A [[[
% \begin{vimcode}
set expandtab
set shiftwidth=4
set tabstop=4
% \end{vimcode}
% ^^A ]]] End of section `Indentation'.
%
% \section{Folding}^^A [[[
% \begin{vimcode}
function! FoldMethod(lnum)
    let l:indent = max([indent(a:lnum+1), indent(a:lnum)])
    return l:indent / &shiftwidth
endfunction

set foldmethod=expr
set foldexpr=FoldMethod(v:lnum)
% \end{vimcode}
% ^^A ]]] End of section `Folding'.
%
% \section{quickrun}^^A [[[
% \begin{vimcode}
let g:quickrun_config = {}
let g:quickrun_config.python = {
    \ 'runner': 'vimproc',
    \ 'command': 'python3',
%   \ 'cmdopt': '',
    \ 'outputter': 'buffer',
%   \ 'outputter/error/error': 'buffer',
    \ 'outputter/error/error': 'quickfix',
    \ 'srcfile': expand("%"),
    \ 'exec': '%c %o %s'
\ }
% \end{vimcode}
% ^^A ]]] End of section `quickrun'.
%
% \begin{vimcode}
set colorcolumn=80


set dictionary+=~/Dropbox/configuration-files/miscellaneous/output-files/python/my_module.py


% \end{vimcode}
% \iffalse
%</python.vim>
% \fi
% ^^A ]]] End of part `python.vim'.
%
% \part{\texttt{tex.vim}}^^A [[[
% \verb|dtx.vim|を作成しても認識されない．
%
% \iffalse
%<*tex.vim>
% \fi
%
% \section{Fold関係}^^A [[[
% 補足
% texだと自動でfoldする機能があるっぽい．
% \verb|let g:tex_fold_enabled=1|，\verb|set fdm=syntax|で機能する（\verb|:h tex-folding|）．
% ただ，自動でfoldするのが気に入らないので手動ですることにする．
%
% \begin{vimcode}
set foldmarker=[[[,]]]
set foldmethod=marker
% \end{vimcode}
% ^^A ]]] End of subsection `Fold関係'.
%
% \section{texだけのkey mapping}^^A [[[
%
% \RenewDocumentCommand \temporarycommand { m m m } {#1&#2&#3\\}
% \begin{mytabular}{lll}
%   key mapping & insert  & \\ \hline
%   \verb|\b|   & \verb|\mymathbold{| ... \verb|}|    & \myemph{b}old \\
%   \verb|\d|   & \verb|\doublequotes{| ... \verb|}|  & \myemph{d}oublequotes \\
%   \verb|\e|   & \verb|\emph{| ... \verb|}|  & \myemph{e}mph \\
%   \verb|\m|   & \verb|$| ... \verb|$|       & \myemph{m}ath \\
%   \verb|\v|   & \verb/\verb|/ ... \verb/|/  & \myemph{v}erb \\ \hline
% \end{mytabular}
%
% In Normal mode "\verb|\e|"で"\verb|\emph{foo}|"を挿入する（Put the cursor on the first character and press "\verb|\e|".）
% "\verb|\e|" は"emph"の"e"
% cf. \verb|usr_05.txt|, \myline{228}
%
% \begin{vimcode}
nnoremap <silent>\d i\doublequotes{<Esc>ea}<Esc>

" 以下だと上手くいかない
" nnoremap <silent>e i\verb|<C-[>eai|<C-[>
nnoremap <silent>\e i\myemph{<Esc>ea}<Esc>

" nnoremap <silent>\v i\verb\|<Esc>ea\|<Esc>
nnoremap <silent><Leader>v i\verb\|<Esc>ea\|<Esc>

" nnoremap <silent>\p i\pythoninline{<Esc>ea}<Esc>

nnoremap <silent><Leader>b i\mymathbold{<Esc>ea}<Esc>

nnoremap <silent><Leader>m i$<Esc>ea$<Esc>

nnoremap <silent><Leader>l i\latexinline{<Esc>ea}<Esc>

autocmd FileType tex nnoremap <silent>\a :%s/’/'/gc<Esc>

autocmd FileType tex nnoremap <silent>\x :%s/➪/\\myarrow/gc<Esc>

" 以下は次を参照した：http://www.mazn.net/blog/2009/01/06/170.html
" autocmd FileType tex nnoremap <silent>\d :%s/“\(.*\)”/"\1"/gc<Esc>


" 以下は次を参照した：http://za.toypark.in/html/2010/02-22.html
" autocmd FileType tex nnoremap <silent>\x :%s/➪/\\myarrow/g | :%s/'/'/g
% \end{vimcode}
%
% \subsection{Syntax hightlighting}^^A [[[
% \begin{myitemize}
% \0 The origin of keys
% \1 \verb|d|: .dtx file (TeX)
% \1 \verb|g|: Graphviz
% \1 \verb|p|: Python
% \1 \verb|t|: TeX
%   \2 \viminline{syn match texComment "%.*$"}
%     \3 \href{run:/usr/share/nvim/runtime/syntax/tex.vim}{\texttt{tex.vim}} \myline{598}を参考にした．
% \end{myitemize}
%
% \begin{macrocode}
nnoremap <silent><Leader>d :set syntax=tex<Esc>
nnoremap <silent><Leader>g :set syntax=dot<Esc>
nnoremap <silent><Leader>p :set syntax=python<Esc>
" nnoremap <silent><Leader>t :set syntax=tex<Esc>:syn match texComment "^%\+" contains=@texCommentGroup<Esc>
nnoremap <silent><Leader>t :set syntax=tex<Esc>:syn match texComment "%.*$" contains=@texCommentGroup<Esc>
% \end{macrocode}
% ^^A ]]] End of subsection `Syntax hightlighting'.
%
% ^^A ]]] End of section `texだけのkey mapping'.
%
% \subsection{補完関係}^^A [[[
% \urlref{http://daisuzu.hatenablog.com/entry/2015/12/05/002129}{completion}
%
% \begin{vimcode}
set dictionary+=~/Dropbox/configuration-files/latex/output-files/classes/mydocument.cls
set dictionary+=~/Dropbox/configuration-files/latex/output-files/classes/mydtxfile.cls
set dictionary+=~/Dropbox/configuration-files/latex/output-files/classes/myslides.cls
set dictionary+=~/Dropbox/configuration-files/latex/output-files/classes/mywallpaper.cls
%
set dictionary+=~/Dropbox/configuration-files/latex/output-files/packages/myenglish.sty
set dictionary+=~/Dropbox/configuration-files/latex/output-files/packages/mygraphic.sty
set dictionary+=~/Dropbox/configuration-files/latex/output-files/packages/mymath.sty
set dictionary+=~/Dropbox/configuration-files/latex/output-files/packages/myprogramming.sty
%
set dictionary+=~/Dropbox/configuration-files/latex/output-files/etc/mydocstrip.tex
%
set dictionary+=~/Dropbox/configuration-files/latex/output-files/references/myreferences.bib
% \end{vimcode}
% ^^A ]]] End of subsection `補完関係'.
%
% \subsection{Auto indentation}^^A [[[
% \begin{myitemize}
% \1 \verb|g:tex_indent_items|などについて
% \urlref{https://www.reddit.com/r/neovim/comments/991kmv/annoying_auto_indentation_in_tex_files/}{Annoying auto indentation in tex files}
% \1 \viminline{filetype indent off}
%   \2 stop auto indent
%   \urlref{https://vim.fandom.com/wiki/How_to_stop_auto_indenting}{How to stop auto indenting}
% \1
% \end{myitemize}
%
% \begin{vimcode}
filetype indent off
autocmd FileType tex set noautoindent

set noautoindent
set nocindent
set nosmartindent

let g:tex_indent_items=0
let g:tex_indent_and=0
let g:tex_indent_brace=0
% \end{vimcode}
% ^^A ]]] End of subsection `Auto indentation'.
%
% \subsection{区切り文字}^^A [[[
% \begin{myitemize}
% \0 次の文字は単語の区切り文字にしない
% \1 \verb|-| (hyphen)
%   \2 理由は\texinline{\ref}や\texinline{\label}の引数で単語の区切りに使い，
%   最後の文字まで補完させるため
% \1 \verb|'|
%   \2 \verb|Taylor's-theorem|や\verb|Cauchy's-mean-value-theorm|などを最後まで補完可能にするため
% \1 \verb|:|
%   \2 
% \1 codeの参照先
%   \2 \href{http://vimwiki.net/?%27iskeyword%27}{iskeyword}
% \end{myitemize}
%
% \begin{vimcode}
set iskeyword+=-
set iskeyword+='
set iskeyword+=:
% \end{vimcode}
% ^^A ]]] End of subsection `****'.
%
% \subsection{etc}^^A [[[
%
%
% \begin{vimcode}

" 定義元に移動するため
" cf. http://daisuzu.hatenablog.com/entry/2015/12/05/002129
set tags+=~/Dropbox/mylatex/classes/myclass
set tags+=~/Dropbox/mylatex/packages/mypackage



vnoremap <silent>\<Space> :'<,'>s/ /%20/gc


" "\p" はpart（「部分」コンパイル）の"p"
"vnoremap <silent><buffer>\p :QuickRun -mode v -type tmptex<CR>

"nnoremap <silent><buffer>\p :<C-u>
"\mx
"\?begin.*alignat<CR>V
"\/end.*alignat<CR>
"\:<C-u>quickrun -mode v -type tmptex<CR>
"\`x












% \end{vimcode}
% ^^A ]]] End of subsection `****'.
%
% \subsubsection{Indentation}^^A [[[
% \begin{myitemize}
% \1 \verb|if expand("%:t") =~ ".*\.tex"}|
% \urlref{http://blog.restartr.com/2014/04/20/vimrc-noexpandtab-in-golang/}{vimrc-noexpandtab-in-golang}
% \1
% \1 Number of spaces = 2の由来
%   \2 \doublequotes{As with code indenting (see later), nested environments and arguments
%   should be indented by (at least) two spaces to make the nature of the nesting clear.}
%   \texdoc[section=2 Documentation style]{l3styleguide}
%   \2 \verb|l3styleguide.tex|も2 spacesでindentしている
%   \urlref{http://mirror.ox.ac.uk/sites/ctan.org/macros/latex/contrib/l3kernel/l3styleguide.tex}{l3styleguide.tex}．
% \1
% \end{myitemize}
%
% \begin{vimcode}
if expand("%:t") =~ ".*\.dtx"
    set expandtab
else
    set noexpandtab
endif

set shiftwidth=2
set tabstop=2
% \end{vimcode}
% ^^A ]]] End of section `Indentation'.
%
% \section{quickrun}^^A [[[
% \begin{vimcode}
let g:quickrun_config = {}
let g:quickrun_config.tex = {
    \ 'runner': 'vimproc',
    \ 'command': 'latexmk',
%   \ 'cmdopt': '-pvc',
    \ 'cmdopt': '-pv',
%   \ 'cmdopt': '-c',
    \ 'outputter': 'error',
%   \ 'outputter/error/error': 'buffer',
    \ 'outputter/error/error': 'quickfix',
    \ 'srcfile': expand("%"),
%   \ 'hook/sweep/files': [
% \						'%S:p:r.aux',
% \						'%S:p:r.bbl',
% \						'%S:p:r.blg',
% \						'%S:p:r.fdb_latexmk',
% \						'%S:p:r.fls',
% \						'%S:p:r.idx',
% \						'%S:p:r.ilg',
% \						'%S:p:r.ind',
% \						'%S:p:r.log',
% \						'%S:p:r.nav',
% \						'%S:p:r.out',
% \						'%S:p:r.snm',
% \						'%S:p:r.toc',
% \						'%S:p:r.tmp',
% \						'%S:p:r.upa',
% \						'%S:p:r.upb',
% \						],
    \ 'exec': '%c %o %s'
\ }
% \end{vimcode}
% ^^A ]]] End of section `quickrun'.
%
%
% \begin{vimcode}
set colorcolumn=80
% \end{vimcode}
%
%
%
% \iffalse
%</tex.vim>
% \fi
% ^^A ]]] End of part `tex.vim'.
%
% \part{\texttt{yaml.vim}}^^A [[[
%
% \begin{concealableitemize}^^A [[[
% \1 The origin of `\verb|yaml.vim|'
%   \2 \verb|~/.config/nvim/after/ftplugin/yml.vim|だと認識されなかっため
% \end{concealableitemize}^^A ]]]
%
% \iffalse
%<*yaml.vim>
% \fi
%
% \section{Indentation}^^A [[[
% \begin{vimcode}
set expandtab
set shiftwidth=2
set tabstop=2
% \end{vimcode}
% ^^A ]]] End of section `Indentation'.
%
% \section{Folding}^^A [[[
% \begin{vimcode}
function! FoldMethod(lnum)
    let l:indent = max([indent(a:lnum+1), indent(a:lnum)])
    return l:indent / &shiftwidth
endfunction

set foldmethod=expr
set foldexpr=FoldMethod(v:lnum)
% \end{vimcode}
% ^^A ]]] End of section `Folding'.
%
% \subsection{補完関係}^^A [[[
% \urlref{http://daisuzu.hatenablog.com/entry/2015/12/05/002129}{completion}
%
% \begin{vimcode}
set dictionary+=~/Dropbox/configuration-files/latex/output-files/references/myreferences.bib

% \end{vimcode}
% ^^A ]]] End of subsection `補完関係'.
%
%
%
%
% \begin{vimcode}
set iskeyword+=-
% \end{vimcode}
%
%
%
% \iffalse
%</yaml.vim>
% \fi
% ^^A ]]] End of part `yaml.vim'.
%
% ^^A End of file `ftplugin.dtx'.
